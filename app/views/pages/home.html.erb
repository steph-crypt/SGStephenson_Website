<script src="https://cdnjs.cloudflare.com/ajax/libs/parallax/3.1.0/parallax.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/simple-parallax-js@5.2.0/dist/simpleParallax.min.js"></script>
<!-- <script src="https://cdn.jsdelivr.net/npm/@glidejs/glide"></script> -->
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k" crossorigin="anonymous"></script>
<meta name="viewport" content="width=device-width, initial-scale=1">

<%= render 'layouts/banner' %>

<div class="section-B">
 <div id="section07" class="demo">
    <a href="#section07"><span></span></a>

      <section class="section-c">
        <%= render 'layouts/about' %>

        <%= render 'layouts/projects_header' %>

        <%= render 'layouts/projects' %>

        <%= render 'layouts/footer' %>


          <script>
            $(function() {
            $('a[href*=#]').on('click', function(e) {
              e.preventDefault();
              $('html, body').animate({ scrollTop: $($(this).attr('href')).offset().top}, 3000, 'linear');
            });
          });
          </script>

          <script>
          class TextScramble {
            constructor(el) {
              this.el = el
              this.chars = '!<>-_\\/[]{}â€”=+*^?#________'
              this.update = this.update.bind(this)
            }
            setText(newText) {
              const oldText = this.el.innerText
              const length = Math.max(oldText.length, newText.length)
              const promise = new Promise((resolve) => this.resolve = resolve)
              this.queue = []
              for (let i = 0; i < length; i++) {
                const from = oldText[i] || ''
                const to = newText[i] || ''
                const start = Math.floor(Math.random() * 40)
                const end = start + Math.floor(Math.random() * 40)
                this.queue.push({ from, to, start, end })
              }
              cancelAnimationFrame(this.frameRequest)
              this.frame = 0
              this.update()
              return promise
            }
            update() {
              let output = ''
              let complete = 0
              for (let i = 0, n = this.queue.length; i < n; i++) {
                let { from, to, start, end, char } = this.queue[i]
                if (this.frame >= end) {
                  complete++
                  output += to
                } else if (this.frame >= start) {
                  if (!char || Math.random() < 0.28) {
                    char = this.randomChar()
                    this.queue[i].char = char
                  }
                  output += `<span class="dud">${char}</span>`
                } else {
                  output += from
                }
              }
              this.el.innerHTML = output
              if (complete === this.queue.length) {
                this.resolve()
              } else {
                this.frameRequest = requestAnimationFrame(this.update)
                this.frame++
              }
            }
            randomChar() {
              return this.chars[Math.floor(Math.random() * this.chars.length)]
            }
          }

          const phrases = [
           'Frontend Developer.',
            'Baby Addict.',
            'Lady.'
          ]

          const el = document.querySelector('.text-animation')
          const fx = new TextScramble(el)

          let counter = 0
          const next = () => {
            fx.setText(phrases[counter]).then(() => {
              setTimeout(next, 1700)
            })
            counter = (counter + 1) % phrases.length
          }

          next()
        </script>

        <script src="./parallax.js"></script>
          <script>
          var scene = document.getElementById('scene');
          var parallax = new Parallax(scene, {
          });
          </script>

        <script src="simpleParallax.js"></script>

        <script>
          var image = document.getElementsByClassName('banner-img');
        new simpleParallax(image, {
        scale: 3.0
        });
        </script>
        <script>

        var image = document.getElementsByClassName('banner-img-2');
      new simpleParallax(image, {
        scale: 3.0
      });

        </script>

        <script src="node_modules/@glidejs/glide/dist/glide.min.js"></script>
          <script>
            new Glide('.glide').mount()
          </script>
    </section>
</div>


